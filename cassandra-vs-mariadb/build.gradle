group 'mariadb-vs-cassandra-1.0'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    integration {
        java {
            srcDir 'src/integration-test/java'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
    analysis {
        java {
            srcDir 'src/analysis/java'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    compile 'com.rabbitmq:amqp-client:4.0.0'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    // https://mvnrepository.com/artifact/com.typesafe/config
    compile group: 'com.typesafe', name: 'config', version: '1.3.1'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile 'org.mariadb.jdbc:mariadb-java-client:1.5.5'
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.1.2'
    // https://mvnrepository.com/artifact/net.jpountz.lz4/lz4
    compile group: 'net.jpountz.lz4', name: 'lz4', version: '1.2.0'

    compile 'com.zaxxer:HikariCP:2.5.1'


    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

clean.doLast {
    // Deletes the analysis/integration output directory in addition to the build directory on clean.
    def dirName = "testLogs"
    file(dirName).list().each {
        f -> delete "${dirName}/${f}"
    }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    setTestClassesDir(sourceSets.integration.output.classesDir)
    classpath += sourceSets.integration.runtimeClasspath
    outputs.upToDateWhen { false }

    testLogging {
        events "passed", "skipped", "failed"
    }
}

task analysis(type: Test, description: 'Runs the database analysis tests. To run an individual test use the --tests parameter e.g. \"gradle analysis --tests showdown.CreateEvent.Create1000\"', group: 'Verification') {
    setTestClassesDir(sourceSets.analysis.output.classesDir)
    classpath += sourceSets.analysis.runtimeClasspath
    outputs.upToDateWhen { false }

    testLogging {
        events "started", "passed", "skipped", "failed"
    }
}
